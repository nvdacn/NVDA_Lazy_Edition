name: Build NVDA Lazy Edition

on:
  push:
    tags:
      - "*"
    branches:
      - master
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:

  download-files:
    name: Download ${{ matrix.file.Name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file:
          - Name: DragAndDrop-2.2.2dev.nvda-addon
            URL: https://github.com/javidominguez/DragAndDrop/releases/download/2.2.2dev/DragAndDrop-2.2.2dev.nvda-addon
            sha256: 7dc49d21be2c55ef340f3e67d650d2696df499765179e3f460ffac944632763e
          - Name: vcredist_x86.exe
            URL: https://dl.nvdacn.com/Share/vcredist_x86.exe
            sha256: B924AD8062EAF4E70437C8BE50FA612162795FF0839479546CE907FFA8D6E386
          - Name: config.json
            URL: https://huggingface.co/Xenova/vit-gpt2-image-captioning/resolve/main/config.json
            sha256: f65c81039a672962d686f71ee0242f0c89dc020a0e3f193a989a696bf3f9515e
            prefix: ModelJSON-
          - Name: preprocessor_config.json
            URL: https://huggingface.co/Xenova/vit-gpt2-image-captioning/resolve/main/preprocessor_config.json
            sha256: 76304e9a1deb0d5f78349a57ad9d8057f36476c29bd292e907e2e8c451c93e9d
            prefix: ModelJSON-
          - Name: vocab.json
            URL: https://huggingface.co/Xenova/vit-gpt2-image-captioning/resolve/main/vocab.json
            sha256: 3ba3c3109ff33976c4bd966589c11ee14fcaa1f4c9e5e154c2ed7f99d80709e7
            prefix: ModelJSON-
          - Name: decoder_model_merged_quantized.onnx
            URL: https://huggingface.co/Xenova/vit-gpt2-image-captioning/resolve/main/onnx/decoder_model_merged_quantized.onnx
            sha256: 1f3ec53b5fc3614c0b54ee786755a7ec3007841f57543f8e241499edfadfa98f
            prefix: ModelONNX-
          - Name: encoder_model_quantized.onnx
            URL: https://huggingface.co/Xenova/vit-gpt2-image-captioning/resolve/main/onnx/encoder_model_quantized.onnx
            sha256: 6f6e2e27c11303cf533682184543333e7ecb930a734197a0272a1e408aba2766
            prefix: ModelONNX-
          - Name: aisound.zip
            URL: https://dl.nvdacn.com/NVDA-Addons/TTS/VocalizerVoice/aisound.zip
            sha256: B4FE1BED8F699179C8FF00F7B6F85AF4FF190ADCE1CCDB6C08132F93B7341EB2
            prefix: speech-
          - Name: VE.zip
            URL: https://dl.nvdacn.com/NVDA-Addons/TTS/VocalizerVoice/VE.zip
            sha256: 35ACAC34551ED8288DC6185A33127F5109AD6CB8901B329667C095DC0085EDD3
            prefix: speech-
          - Name: voice.zip
            URL: https://dl.nvdacn.com/Share/voice.zip
            sha256: AB2D6AFD7C5E12901DD3DA3CDC29325AA11A9DAB2EAC608D7B731993B2066450
            prefix: speech-
          - Name: spchapi.exe
            URL: https://dl.nvdacn.com/NVDA-Addons/TTS/spchapi.exe
            sha256: 4fe6f9be7a75d649e2d484069c3626d30345e746e565f0b7b1fcff34ef223a2c
            prefix: speech-
          - Name: IBM_ViaVoice_TTS_Runtime.exe
            URL: https://dl.nvdacn.com/NVDA-Addons/TTS/IBMViaVoiceTTSRuntime.exe
            sha256: 0f9e8a998f0bf62513961fe0cb68bc50e06440a6d8e45e8ce6e073e332104255
            prefix: speech-
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Download ${{ matrix.file.Name }}
        uses: ./.github/workflows/DownloadResource
        with:
          file-name: ${{ matrix.file.Name }}
          file-url: ${{ matrix.file.URL }}
          file-sha256: ${{ matrix.file.sha256 }}
          prefix: ${{ matrix.file.prefix }}

  download-addons-from-addonStore:
    name: Download ${{ matrix.addon.addonId }} from Addon Store
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon:
          - addonId: Access8Math
          - addonId: addonsHelp
          - addonId: addonsTools
          - addonId: AiSound5
          - addonId: audioManager
          - addonId: clipboardEnhancement
          - addonId: goldenCursor
          - addonId: ime_expressive
          - addonId: inputLock
          - addonId: instantTranslate
          - addonId: numberProcessing
          - addonId: objWatcher
          - addonId: QQEnhancement
          - addonId: resourceMonitor
          - addonId: unmute
          - addonId: WeChatEnhancement
          - addonId: withSounds
          - addonId: WorldVoice
          - addonId: xyOCR
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Download ${{ matrix.addon.addonId }}
        uses: ./.github/workflows/DownloadResource
        with:
          from-addonStore: true
          addon-ID: ${{ matrix.addon.addonId }}

  download-NVDA:
    name: Download NVDA
    runs-on: ubuntu-latest
    env:
      NVDA_RELEASES_BASE_URL: https://download.nvaccess.org/releases/
    outputs:
      NVDAFilename: nvda_${{ steps.nvda.outputs.replaced }}.exe
      NVDAVersion: ${{ steps.nvda.outputs.replaced }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Get tag
        id: nvda-tag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: nvaccess/nvda
          excludes: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'beta') && 'prerelease, draft' || '' }}
      - name: Processing tag
        id: nvda
        uses: frabert/replace-string-action@v2
        with:
          pattern: 'release-(.*)'
          string: ${{ steps.nvda-tag.outputs.release }}
          replace-with: '$1'
      - name: Download nvda_${{ steps.nvda.outputs.replaced }}.exe
        uses: ./.github/workflows/DownloadResource
        with:
          file-name: nvda_${{ steps.nvda.outputs.replaced }}.exe
          file-url: ${{ env.NVDA_RELEASES_BASE_URL }}/${{ steps.nvda.outputs.replaced }}/nvda_${{ steps.nvda.outputs.replaced }}.exe

  build:
    name: Build NVDA Lazy Edition
    runs-on: windows-latest
    needs:
      - download-NVDA
      - download-files
      - download-addons-from-addonStore
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Download ${{ needs.download-NVDA.outputs.NVDAFilename }}
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.download-NVDA.outputs.NVDAFilename }}
          path: ${{ github.workspace }}/Resource/
      - name: Download vcredist_x86.exe
        uses: actions/download-artifact@v5
        with:
          name: vcredist_x86.exe
          path: ${{ github.workspace }}/Resource/
      - name: Download Speech
        uses: actions/download-artifact@v5
        with:
          path: ${{ github.workspace }}/Resource/speech/
          pattern: speech-*
          merge-multiple: true
      - name: Download Addons
        uses: actions/download-artifact@v5
        with:
          path: ${{ github.workspace }}/Resource/Addons/
          pattern: "*.nvda-addon"
          merge-multiple: true
      - name: Download ModelJSON
        uses: actions/download-artifact@v5
        with:
          path: ${{ github.workspace }}/Resource/vit-gpt2-image-captioning/
          pattern: ModelJSON-*
          merge-multiple: true
      - name: Download ModelONNX
        uses: actions/download-artifact@v5
        with:
          path: ${{ github.workspace }}/Resource/vit-gpt2-image-captioning/onnx/
          pattern: ModelONNX-*
          merge-multiple: true
      - name: Run the build script
        run: ${{ github.workspace }}/Run.bat GITHUB_ACTIONS
        env:
          NVDAVersion: ${{ needs.download-NVDA.outputs.NVDAVersion }}
          BetaVersion: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'beta') && 'False' || 'True' }}
      - name: Upload NVDA_Lazy_Edition
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: NVDA_Lazy_Edition
          path: ${{ github.workspace }}/Build/NVDA*.exe
      - name: Upload Resource
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: Resource
          path: ${{ github.workspace }}/Resource
          compression-level: 0
      - name: Upload Archive
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: Archive
          path: ${{ github.workspace }}/Build/Archive/*
          compression-level: 0

  upload_release:
    name: Release version
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download Archive
        uses: actions/download-artifact@v5
        with:
          name: Archive
          path: NVDA_Lazy_Edition
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: 详细更新日志请[点此查看](documentation/changes.md)。
          files: NVDA_Lazy_Edition/*
          fail_on_unmatched_files: true
          prerelease: ${{ contains(github.ref, 'beta') }}
